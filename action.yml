name: 'Phx Build And Deploy Composite Action'
description: 'Execute Build And Deploy Operations In A Composite Action'
inputs:
  secrets:
    description: 'Secrets'
    required: true
  actionInputs:
    description: 'Inputs'
    required: true
  enable-extended-ops:
    type: boolean
    description: Enable Extended Ops
outputs:
  json-action-outputs:
    description: "Json Composite Action Outputs"
    value: ${{ toJSON(steps.json-ops.outputs) }}
  json-action-extended-outputs:
    description: "Json Composite Action Outputs"
    value: ${{ toJSON(steps.json-extended-ops.outputs) }}    
  has-extended-outputs:
    description: "Has Json Extended Composite Action Outputs"
    value: ${{ steps.json-extended-ops.outputs.has-extended-ops-results || false }}
    
runs:
  using: "composite"
  steps:
    - name: Calculate New Build Number
      shell: bash
      env:
        ATTACH_IPA_TO_RUN: ${{ fromJSON(inputs.actionInputs).attach-ipa }} 
      run: |
          newBuildNumber=$(echo $((${{env.buildNumberBase}}+${{github.run_number}})))
          echo "New Build Number: $newBuildNumber"
          echo "newBuildNumber=$newBuildNumber" >> $GITHUB_ENV   
          
    - name: Build
      shell: bash

      env:
        SECRET1: ${{ fromJSON(inputs.secrets).DESC }}
        IS_ENTERPRISE_APP: ${{ fromJSON(inputs.actionInputs).enterprise-app }}
        RUNNER: ${{ fromJSON(inputs.actionInputs).runner }}    
        JOB_TYPE: ${{ fromJSON(inputs.actionInputs).job-type }}       
        ATTACH_IPA: ${{ fromJSON(inputs.actionInputs).attach-ipa }}       
      run: |
        echo "Building..."
        echo "Job Type: ${JOB_TYPE}"
        echo "Attach IPA: ${ATTACH_IPA}"
        echo "Attach IPA To Run: ${ATTACH_IPA_TO_RUN}"
        echo "Archive Path: ${ARCHIVE_PATH}"          
        echo "Workflow: ${{github.workflow}}"
        echo "appVersion: $appVersion"
        echo "newBuildNumber: ${newBuildNumber}"
        echo "Is Enterprise App: ${IS_ENTERPRISE_APP}"        
        echo "Runner ${RUNNER}"
        if ${IS_ENTERPRISE_APP} == "true"; then
          echo "Enterprise App"
          ./scripts/deploy.sh -b "${newBuildNumber}" -v "$appVersion" -S "iPhone Distribution: Phoenix Roberts LLC" -M dae3007d-dbd8-4f85-bfbd-5cbef813cd3b -s "Enterprise MemoryMatrix" -c "Enterprise Release" -i "${ARCHIVE_PATH}"
        else
          echo "App Store App"
          ./scripts/deploy.sh -b "${newBuildNumber}" -v "$appVersion" -S "Apple Distribution: Robert Zmudzinski (LK58XLFP48)" -M cc7c62a4-7417-4578-b2f0-30b5f8fd50fe -s "MemoryMatrix" -c "Release" -i "${ARCHIVE_PATH}"
        fi          

    - name: Package
      shell: bash
      env:
        SECRET1: ${{ fromJSON(inputs.secrets).DESC }}
        IS_ENTERPRISE_APP: ${{ fromJSON(inputs.actionInputs).enterprise-app }}
        RUNNER: ${{ fromJSON(inputs.actionInputs).runner }}    
        JOB_TYPE: ${{ fromJSON(inputs.actionInputs).job-type }}   
      if: env.JOB_TYPE == 'Build IPA' || env.JOB_TYPE == 'Deployment'
      run: |          
        echo "Packaging For Job Type: ${JOB_TYPE}"
        if ${IS_ENTERPRISE_APP} == "true"; then
          echo "Creating Enterprise Package..."
          xcodebuild -exportArchive -archivePath "${ARCHIVE_PATH}" -exportPath "${IPA_PATH}" -exportOptionsPlist ./export-enterprise.plist
        else 
          echo "Creating App Store Package..."
          xcodebuild -exportArchive -archivePath "${ARCHIVE_PATH}" -exportPath "${IPA_PATH}" -exportOptionsPlist ./export-appstore.plist     
        fi
        echo "Workflow: ${{github.workflow}}" > "${IPA_PATH}/changes.txt"
        echo "appVersion: $appVersion" >> "${IPA_PATH}/changes.txt"
        echo "newBuildNumber: ${newBuildNumber}" >> "${IPA_PATH}/changes.txt"
        find "${ARCHIVE_PATH}" -name "*" > results.txt
        find "${IPA_PATH}" -name "*" >> results.txt  

    - name: Upload Package
      shell: bash
      if: env.JOB_TYPE == 'Deployment'
      run: |    
        if ${IS_ENTERPRISE_APP} == "true"; then
          echo "Uploading To App Center..."  
          appcenter distribute release --app "rzmudzin-s9j5/Matrix" --file "${IPA_PATH}/MemoryMatrix.ipa" --release-notes-file "${IPA_PATH}/changes.txt" --token f8ce02d0928ad5364cadbf43545707805c9d1660 --group "Collaborators"
        else
          echo "Uploading To Apple App Store..."  
          ./scripts/upload.sh -b "${newBuildNumber}" -v "$appVersion" -i "$ascIssuerId" -k "$ascKeyId" -p "${IPA_PATH}/MemoryMatrix.ipa"
        fi
          
    - name: Attach Results
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: results.txt
        
    - name: Attach IPA
      env:
        SECRET1: ${{ fromJSON(inputs.secrets).DESC }}
        IS_ENTERPRISE_APP: ${{ fromJSON(inputs.actionInputs).enterprise-app }}
        RUNNER: ${{ fromJSON(inputs.actionInputs).runner }}    
        JOB_TYPE: ${{ fromJSON(inputs.actionInputs).job-type }}       
        ATTACH_IPA: ${{ fromJSON(inputs.actionInputs).attach-ipa }}       
      # if: env.ATTACH_IPA == true && (env.JOB_TYPE == 'Build IPA'|| env.JOB_TYPE == 'Deployment')    
      # if: fromJSON(inputs.actionInputs).attach-ipa == true && (fromJSON(inputs.actionInputs).job-type == 'Build IPA'|| fromJSON(inputs.actionInputs).job-type == 'Deployment')
      if: (env.JOB_TYPE == 'Build IPA' || env.JOB_TYPE == 'Deployment') && env.ATTACH_IPA == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: MemoryMatrix
        path: "${{ env.IPA_PATH }}/MemoryMatrix.ipa"
